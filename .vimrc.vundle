if &compatible
  set nocompatible
end

filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" Let Vundle manage Vundle
"Plugin 'gmarik/vundle'
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-bundler'

" Define bundles via Github repos
Plugin 'christoomey/vim-run-interactive'

" 自动补全插件
Plugin 'Valloric/YouCompleteMe'
let g:ycm_server_python_interpreter='/usr/bin/python'
let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'
set completeopt=longest,menu	"让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)
autocmd InsertLeave * if pumvisible() == 0|pclose|endif	"离开插入模式后自动关闭预览窗口
" inoremap <expr> <CR>       pumvisible() ? "\<C-y>" : "\<CR>"	" 回车即选中当前项上下左右键的行为 会显示其他信息
inoremap <expr> <Down>     pumvisible() ? "\<C-n>" : "\<Down>"
inoremap <expr> <Up>       pumvisible() ? "\<C-p>" : "\<Up>"
inoremap <expr> <PageDown> pumvisible() ? "\<PageDown>\<C-p>\<C-n>" : "\<PageDown>"
inoremap <expr> <PageUp>   pumvisible() ? "\<PageUp>\<C-p>\<C-n>" : "\<PageUp>"

"youcompleteme  默认tab  s-tab 和自动补全冲突
"let g:ycm_key_list_select_completion=['<c-n>']
"let g:ycm_key_list_select_completion = ['<Down>']
"let g:ycm_key_list_previous_completion=['<c-p>']
"let g:ycm_key_list_previous_completion = ['<Up>']
let g:ycm_confirm_extra_conf=0 "关闭加载.ycm_extra_conf.py提示

let g:ycm_collect_identifiers_from_tags_files=1	" 开启 YCM 基于标签引擎
let g:ycm_min_num_of_chars_for_completion=2	"从第2个键入字符就开始罗列匹配项
let g:ycm_cache_omnifunc=0	" 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_seed_identifiers_with_syntax=1	" 语法关键字补全
"nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>	"force recomile with syntastic
"nnoremap <leader>lo :lopen<CR>	"open locationlist
"nnoremap <leader>lc :lclose<CR>	"close locationlist
inoremap <leader><leader> <C-x><C-o>
"在注释输入中也能补全
let g:ycm_complete_in_comments = 1
"在字符串输入中也能补全
let g:ycm_complete_in_strings = 1
"注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0

map <F4> :YcmCompleter GoToDefinitionElseDeclaration<CR> " 跳转到定义处
map <leader>fx :YcmCompleter FixIt<CR>

" 资源管理、搜索插件，类似Sublime的ctrl+p功能
Plugin 'kien/ctrlp.vim'

Plugin 'vim-scripts/ctags.vim'

" 展示当前文件Symbol
Plugin 'vim-scripts/taglist.vim'
" 设置Taglist
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Ctags_Cmd="/usr/bin/ctags"
map <F9> :TlistTog<CR>

" 展示当前文件Symbol
Plugin 'majutsushi/tagbar'
nmap <F8> :TagbarToggle<CR>

" 资源管理器插件
Plugin 'scrooloose/nerdtree'
" 设置NerdTree快捷键
map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>

Plugin 'tomasr/molokai'

" 中文vim帮助文档
Plugin 'asins/vimcdoc'

" 缩进标识
Plugin 'nathanaelkane/vim-indent-guides'
" 设置缩进标识vim-indent-guides插件
" 随vim自启动
let g:indent_guides_enable_on_vim_startup=0
" 从第二层开始可视化显示缩进
let g:indent_guides_start_level=1
" 色块宽度
let g:indent_guides_guide_size=1
" 快捷键 i 开关缩进可视化
:nmap <silent> <Leader>i <Plug>IndentGuidesToggle

" ###### 快速注释                                                                                                                   
Plugin 'scrooloose/nerdcommenter'
let g:NERDSpaceDelims=1

" ##### *.cpp 和 *.h 间切换
Plugin 'vim-scripts/a.vim'
nmap <Leader>ch :A<CR>" 子窗口中显示 *.cpp 或 *.h
nmap <Leader>sch :AS<CR>

"Plugin 'mattn/emmet-vim'
"Plugin 'danro/rename.vim'
"Plugin 'kchmck/vim-coffee-script'
"Plugin 'pbrisbin/vim-mkdir'
"Plugin 'scrooloose/syntastic'
"Plugin 'slim-template/vim-slim'
"Plugin 'thoughtbot/vim-rspec'
"Plugin 'tpope/vim-endwise'
"Plugin 'tpope/vim-fugitive'
"Plugin 'tpope/vim-rails'
"Plugin 'tpope/vim-surround'
" Plugin 'vim-ruby/vim-ruby'
"Plugin 'vim-scripts/matchit.zip'
"Plugin 'vim-scripts/tComment'
"Plugin 'Lokaltog/vim-easymotion'
"Plugin 'klen/python-mode'
"Plugin 'Lokaltog/vim-powerline'
"Plugin 'godlygeek/tabular'
"Plugin 'msanders/snipmate.vim'
"Plugin 'jelera/vim-javascript-syntax'
"Plugin 'altercation/vim-colors-solarized'
" Plugin 'othree/html5.vim'
"Plugin 'xsbeats/vim-blade'
"Plugin 'Raimondi/delimitMate'
"Plugin 'groenewege/vim-less'
" Plugin 'evanmiller/nginx-vim-syntax'

if filereadable(expand("~/.vimrc.vundle.local"))
  source ~/.vim/.vimrc.vundle.local
endif

call vundle#end()
filetype plugin indent on
